<%- include('../partials/header', { title: title }) %>

<div class="row">
  <div class="col-12">
    <div class="d-flex justify-content-between align-items-center mb-4">
      <h1 class="h3">Messages - <%= session ? session.session_name : 'All Sessions' %></h1>
      <div>
        <% if (session) { %>
          <a href="/user/sessions" class="btn btn-outline-secondary me-2">
            <i class="bi bi-arrow-left"></i> Back to Sessions
          </a>
        <% } %>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#send-message-modal">
          <i class="bi bi-send"></i> Send Message
        </button>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="col-12">
    <div class="card">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title mb-0">Message History</h5>
        <div class="d-flex">
          <div class="input-group">
            <input type="text" class="form-control" id="search-input" placeholder="Search messages...">
            <button class="btn btn-outline-secondary" type="button" id="search-btn">
              <i class="bi bi-search"></i>
            </button>
          </div>
        </div>
      </div>
      <div class="card-body">
        <% if (messages && messages.length > 0) { %>
          <div class="table-responsive">
            <table class="table table-hover">
              <thead>
                <tr>
                  <th>Phone</th>
                  <th>Type</th>
                  <th>Content</th>
                  <th>Status</th>
                  <th>Timestamp</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% messages.forEach(message => { %>
                  <tr>
                    <td><%= message.phone_number %></td>
                    <td>
                      <% if (message.direction === 'outgoing') { %>
                        <span class="badge bg-primary">Sent</span>
                      <% } else { %>
                        <span class="badge bg-success">Received</span>
                      <% } %>
                    </td>
                    <td>
                      <% if (message.message_type === 'text') { %>
                        <%= message.message_body && message.message_body.length > 50 ? message.message_body.substring(0, 50) + '...' : (message.message_body || 'No message content') %>
                      <% } else if (message.message_type === 'image') { %>
                        <i class="bi bi-image"></i> Image
                      <% } else if (message.message_type === 'document') { %>
                        <i class="bi bi-file-earmark"></i> Document
                      <% } else if (message.message_type === 'audio') { %>
                        <i class="bi bi-mic"></i> Audio
                      <% } else if (message.message_type === 'video') { %>
                        <i class="bi bi-camera-video"></i> Video
                      <% } else { %>
                        <%= message.message_type %>
                      <% } %>
                    </td>
                    <td>
                      <% if (message.status === 'sent') { %>
                        <span class="badge bg-info">Sent</span>
                      <% } else if (message.status === 'delivered') { %>
                        <span class="badge bg-primary">Delivered</span>
                      <% } else if (message.status === 'read') { %>
                        <span class="badge bg-success">Read</span>
                      <% } else if (message.status === 'failed') { %>
                        <span class="badge bg-danger">Failed</span>
                      <% } else { %>
                        <span class="badge bg-secondary"><%= message.status %></span>
                      <% } %>
                    </td>
                    <td><%= new Date(message.created_at).toLocaleString() %></td>
                    <td>
                      <button class="btn btn-sm btn-info view-message-btn" data-message-id="<%= message.id %>" data-bs-toggle="modal" data-bs-target="#view-message-modal">
                        <i class="bi bi-eye"></i>
                      </button>
                    </td>
                  </tr>
                <% }); %>
              </tbody>
            </table>
          </div>
          
          <!-- Pagination -->
          <% if (totalPages > 1) { %>
            <nav aria-label="Message pagination">
              <ul class="pagination justify-content-center">
                <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                  <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                  </a>
                </li>
                
                <% for(let i = 1; i <= totalPages; i++) { %>
                  <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                  </li>
                <% } %>
                
                <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                  <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                  </a>
                </li>
              </ul>
            </nav>
          <% } %>
        <% } else { %>
          <div class="text-center py-5">
            <i class="bi bi-chat-dots text-muted" style="font-size: 3rem;"></i>
            <p class="text-muted mt-3">No messages found</p>
            <p>Start sending messages or wait for incoming messages to appear here.</p>
          </div>
        <% } %>
      </div>
    </div>
  </div>
</div>

<!-- Send Message Modal -->
<div class="modal fade" id="send-message-modal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Send WhatsApp Message</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="send-message-form">
          <div class="mb-3">
            <label for="phone-number" class="form-label">Phone Number</label>
            <input type="text" class="form-control" id="phone-number" placeholder="e.g., 6281234567890" required>
            <div class="form-text">Include country code without + or 00 (e.g., 6281234567890)</div>
          </div>
          
          <div class="mb-3">
            <label for="message-text" class="form-label">Message</label>
            <textarea class="form-control" id="message-text" rows="4" required></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="send-message-btn">Send Message</button>
      </div>
    </div>
  </div>
</div>

<!-- View Message Modal -->
<div class="modal fade" id="view-message-modal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Message Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div id="message-details">
          <div class="d-flex justify-content-center">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Elements
    const sendMessageForm = document.getElementById('send-message-form');
    const phoneNumberInput = document.getElementById('phone-number');
    const messageTextInput = document.getElementById('message-text');
    const sendMessageBtn = document.getElementById('send-message-btn');
    const searchInput = document.getElementById('search-input');
    const searchBtn = document.getElementById('search-btn');
    const viewMessageBtns = document.querySelectorAll('.view-message-btn');
    const messageDetails = document.getElementById('message-details');
    
    // Send message button
    sendMessageBtn.addEventListener('click', async function() {
      const phoneNumber = phoneNumberInput.value.trim();
      const messageText = messageTextInput.value.trim();
      
      if (!phoneNumber) {
        showError('Phone number is required');
        return;
      }
      
      if (!messageText) {
        showError('Message text is required');
        return;
      }
      
      try {
        sendMessageBtn.disabled = true;
        sendMessageBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Sending...';
        
        const sessionId = '<%= session ? session.id : "" %>';
        
        if (!sessionId) {
          showError('Session ID is required');
          return;
        }
        
        const response = await fetch(`/api/whatsapp/session/${sessionId}/send`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            to: phoneNumber,
            message: messageText
          })
        });
        
        const data = await response.json();
        
        if (response.ok) {
          showSuccess(data.message || 'Message sent successfully');
          
          // Reset form
          sendMessageForm.reset();
          
          // Close modal
          const modal = bootstrap.Modal.getInstance(document.getElementById('send-message-modal'));
          modal.hide();
          
          // Reload page after a short delay
          setTimeout(() => {
            window.location.reload();
          }, 2000);
        } else {
          showError(data.message || 'Failed to send message');
        }
      } catch (error) {
        console.error('Error sending message:', error);
        showError('An error occurred while sending the message');
      } finally {
        sendMessageBtn.disabled = false;
        sendMessageBtn.textContent = 'Send Message';
      }
    });
    
    // Search button
    searchBtn.addEventListener('click', function() {
      const searchTerm = searchInput.value.trim();
      
      if (searchTerm) {
        window.location.href = window.location.pathname + '?search=' + encodeURIComponent(searchTerm);
      }
    });
    
    // Search input enter key
    searchInput.addEventListener('keyup', function(event) {
      if (event.key === 'Enter') {
        searchBtn.click();
      }
    });
    
    // View message buttons
    viewMessageBtns.forEach(button => {
      button.addEventListener('click', async function() {
        const messageId = this.getAttribute('data-message-id');
        
        try {
          // Show loading spinner
          messageDetails.innerHTML = `
            <div class="d-flex justify-content-center">
              <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
              </div>
            </div>
          `;
          
          const response = await fetch(`/api/whatsapp/message/${messageId}`);
          const data = await response.json();
          
          if (response.ok) {
            const message = data.message;
            
            let messageContent = '';
            
            if (message.message_type === 'text') {
              messageContent = `<p class="message-text">${message.message_body}</p>`;
            } else if (message.message_type === 'image') {
              messageContent = `<div class="text-center"><img src="${message.media_url}" class="img-fluid rounded" alt="Image"></div>`;
            } else if (message.message_type === 'document') {
              messageContent = `
                <div class="d-grid gap-2">
                  <a href="${message.media_url}" class="btn btn-outline-primary" target="_blank">
                    <i class="bi bi-file-earmark"></i> Download Document
                  </a>
                </div>
              `;
            } else if (message.message_type === 'audio') {
              messageContent = `
                <div class="text-center">
                  <audio controls>
                    <source src="${message.media_url}" type="audio/mpeg">
                    Your browser does not support the audio element.
                  </audio>
                </div>
              `;
            } else if (message.message_type === 'video') {
              messageContent = `
                <div class="text-center">
                  <video controls class="img-fluid rounded">
                    <source src="${message.media_url}" type="video/mp4">
                    Your browser does not support the video element.
                  </video>
                </div>
              `;
            } else {
              messageContent = `<p class="text-muted">Unsupported message type: ${message.message_type}</p>`;
            }
            
            messageDetails.innerHTML = `
              <div class="mb-3">
                <strong>Phone Number:</strong>
                <p>${message.phone_number}</p>
              </div>
              
              <div class="mb-3">
                <strong>Direction:</strong>
                <p>
                  ${message.direction === 'outgoing' ? 
                    '<span class="badge bg-primary">Sent</span>' : 
                    '<span class="badge bg-success">Received</span>'}
                </p>
              </div>
              
              <div class="mb-3">
                <strong>Status:</strong>
                <p>
                  ${getStatusBadge(message.status)}
                </p>
              </div>
              
              <div class="mb-3">
                <strong>Timestamp:</strong>
                <p>${new Date(message.created_at).toLocaleString()}</p>
              </div>
              
              <div class="mb-3">
                <strong>Content:</strong>
                ${messageContent}
              </div>
            `;
          } else {
            messageDetails.innerHTML = `
              <div class="alert alert-danger">
                ${data.message || 'Failed to load message details'}
              </div>
            `;
          }
        } catch (error) {
          console.error('Error loading message details:', error);
          messageDetails.innerHTML = `
            <div class="alert alert-danger">
              An error occurred while loading message details
            </div>
          `;
        }
      });
    });
    
    // Helper function to get status badge
    function getStatusBadge(status) {
      switch (status) {
        case 'sent':
          return '<span class="badge bg-info">Sent</span>';
        case 'delivered':
          return '<span class="badge bg-primary">Delivered</span>';
        case 'read':
          return '<span class="badge bg-success">Read</span>';
        case 'failed':
          return '<span class="badge bg-danger">Failed</span>';
        default:
          return `<span class="badge bg-secondary">${status}</span>`;
      }
    }
    
    // Helper functions for showing messages
    function showSuccess(message) {
      const toast = document.createElement('div');
      toast.className = 'toast align-items-center text-white bg-success border-0';
      toast.setAttribute('role', 'alert');
      toast.setAttribute('aria-live', 'assertive');
      toast.setAttribute('aria-atomic', 'true');
      
      toast.innerHTML = `
        <div class="d-flex">
          <div class="toast-body">
            ${message}
          </div>
          <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
      `;
      
      const toastContainer = document.createElement('div');
      toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
      toastContainer.appendChild(toast);
      
      document.body.appendChild(toastContainer);
      const bsToast = new bootstrap.Toast(toast, { delay: 5000 });
      bsToast.show();
      
      // Remove the container when hidden
      toast.addEventListener('hidden.bs.toast', function () {
        document.body.removeChild(toastContainer);
      });
    }
    
    function showError(message) {
      const toast = document.createElement('div');
      toast.className = 'toast align-items-center text-white bg-danger border-0';
      toast.setAttribute('role', 'alert');
      toast.setAttribute('aria-live', 'assertive');
      toast.setAttribute('aria-atomic', 'true');
      
      toast.innerHTML = `
        <div class="d-flex">
          <div class="toast-body">
            ${message}
          </div>
          <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
      `;
      
      const toastContainer = document.createElement('div');
      toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
      toastContainer.appendChild(toast);
      
      document.body.appendChild(toastContainer);
      const bsToast = new bootstrap.Toast(toast, { delay: 5000 });
      bsToast.show();
      
      // Remove the container when hidden
      toast.addEventListener('hidden.bs.toast', function () {
        document.body.removeChild(toastContainer);
      });
    }
  });
</script>

<%- include('../partials/footer') %>