<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css">
  <style>
    body {
      background-color: #f8f9fa;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
    }
    .register-container {
      max-width: 400px;
      width: 100%;
      padding: 2rem;
      background-color: #fff;
      border-radius: 10px;
      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }
    .logo {
      text-align: center;
      margin-bottom: 2rem;
    }
    .logo img {
      max-width: 150px;
    }
    .alert {
      display: none;
    }
  </style>
</head>
<body>
  <div class="register-container">
    <div class="logo">
      <h2>WhatsApp Web API</h2>
      <p class="text-muted">Create a new account</p>
    </div>
    
    <div class="alert alert-danger" id="error-alert" role="alert"></div>
    <div class="alert alert-success" id="success-alert" role="alert"></div>
    
    <form id="register-form">
      <div class="mb-3">
        <label for="username" class="form-label">Username</label>
        <input type="text" class="form-control" id="username" name="username" required>
      </div>
      <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input type="email" class="form-control" id="email" name="email" required>
      </div>
      <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <input type="password" class="form-control" id="password" name="password" required>
      </div>
      <div class="mb-3">
        <label for="confirm-password" class="form-label">Confirm Password</label>
        <input type="password" class="form-control" id="confirm-password" name="confirm-password" required>
      </div>
      <div class="d-grid gap-2">
        <button type="submit" class="btn btn-primary" id="register-btn">Register</button>
      </div>
    </form>
    
    <div class="mt-3 text-center">
      <p>Already have an account? <a href="/login">Login</a></p>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const registerForm = document.getElementById('register-form');
      const registerBtn = document.getElementById('register-btn');
      const errorAlert = document.getElementById('error-alert');
      const successAlert = document.getElementById('success-alert');
      
      registerForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Reset alerts
        errorAlert.style.display = 'none';
        successAlert.style.display = 'none';
        
        // Validate password match
        const password = document.getElementById('password').value;
        const confirmPassword = document.getElementById('confirm-password').value;
        
        if (password !== confirmPassword) {
          errorAlert.textContent = 'Passwords do not match';
          errorAlert.style.display = 'block';
          return;
        }
        
        // Disable button and show loading state
        registerBtn.disabled = true;
        registerBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Registering...';
        
        try {
          const response = await fetch('/api/register', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              username: document.getElementById('username').value,
              email: document.getElementById('email').value,
              password: document.getElementById('password').value
            })
          });
          
          const data = await response.json();
          
          if (response.ok) {
            // Show success message
            successAlert.textContent = data.message;
            successAlert.style.display = 'block';
            
            // Redirect to login page after successful registration
            setTimeout(() => {
              window.location.href = '/login';
            }, 2000);
          } else {
            // Show error message
            errorAlert.textContent = data.message;
            errorAlert.style.display = 'block';
            
            // Reset button
            registerBtn.disabled = false;
            registerBtn.textContent = 'Register';
          }
        } catch (error) {
          console.error('Registration error:', error);
          errorAlert.textContent = 'An error occurred during registration. Please try again.';
          errorAlert.style.display = 'block';
          
          // Reset button
          registerBtn.disabled = false;
          registerBtn.textContent = 'Register';
        }
      });
    });
  </script>
</body>
</html>